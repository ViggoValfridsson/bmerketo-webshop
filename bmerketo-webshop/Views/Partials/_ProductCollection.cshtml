@model CollectionViewmodel;

@{
    var products = await _productService.GetAllAsync(Model.Filter);
}

<div class="container product-collection">
    <div class="header-container">
        <h2>@Model.CollectionName</h2>
    </div>

    <div class="product-container">
        @for (int i = 0; i < products.Count; i++)
        {
            <partial name="/Views/Partials/_CollectionItem.cshtml" model=@products[i] />
        }
    </div>

    <div class="button-container">
        <button type="button" id="load-more-button">
            LOAD MORE
            <i class="bi bi-arrow-clockwise"></i>
        </button>
    </div>
</div>

<script>
    var productAmount = @Model.ProductAmount;
    var currentIndex = productAmount;
    var productsCount = @products.Count;

    document.addEventListener('DOMContentLoaded', function () {
        var loadMoreButton = document.getElementById('load-more-button');
        var productContainer = document.querySelector('.product-container');

        var collectionItems = productContainer.getElementsByClassName('product-item');

        for (var i = currentIndex; i < collectionItems.length; i++) {
            collectionItems[i].style.display = 'none';
        }

        loadMoreButton.addEventListener('click', function () {
            var endIndex = currentIndex + productAmount;

            for (var i = currentIndex; i < endIndex && i < collectionItems.length; i++) {
                collectionItems[i].style.display = 'block';
            }

            currentIndex = endIndex;

            if (currentIndex >= productsCount) {
                loadMoreButton.style.display = 'none';
            }
        });
    });
</script>
