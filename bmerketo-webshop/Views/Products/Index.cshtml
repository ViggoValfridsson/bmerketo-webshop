@model CollectionViewmodel

@{
    ViewData["title"] = "Products";
    var categories = await _categoryService.GetAllAsync();
    var tags = await _tagService.GetAllAsync();
    var amountOfPages = (int)Math.Ceiling((decimal)Model.RowCount / 32);
    var currentRoute = ViewContext.RouteData.Values["action"]?.ToString();
    var currentCategory = ViewContext.RouteData.Values["category"]?.ToString()!.ToLower();
    var currentTag = ViewContext.RouteData.Values["tag"]?.ToString()!.ToLower();
}

<div class="product-page">
    <div class="container">
        <div>
            <nav>
                <ul class="link-list">
                    <li>
                        <a asp-action="Index" asp-route-page="1" class="@(currentRoute == "Index" ? "active" : "")">All</a>
                    </li>
                    <li class="seperator">|</li>
                    @foreach (var category in categories)
                    {
                        <li>
                            <a asp-action="ProductsByCategory" asp-route-category="@category.Name.ToLower()" asp-route-page="1"
                               class="@(currentRoute == "ProductsByCategory" && category.Name.ToLower() == currentCategory ? "active" : "")">
                                @category.Name
                            </a>
                        </li>
                        <li class="seperator">|</li>
                    }
                    @for (var i = 0; i < tags.Count; i++)
                    {
                        <li>
                            <a asp-action="ProductsByTag" asp-route-tag="@tags[i].Name.ToLower()" asp-route-page="1" class="@(currentRoute == "ProductsByTag" && tags[i].Name.ToLower() == currentTag ? "active" : "")">
                                @tags[i].Name
                            </a>
                        </li>

                        @if (i != tags.Count - 1)
                        {
                            <li class="seperator">|</li>
                        }
                    }
                </ul>
            </nav>
        </div>
        <div class="filter"></div>
        @if (Model.Products != null && Model.Products.Count > 0)
        {
            <Partial name="/Views/Partials/_ProductCollection.cshtml" />

            <div class="page-button-container">
                @if (Model.Page != 1)
                {
                    // We don't want to show go back arrow if we are on the first page
                    <a asp-route-page="@(Model.Page - 1)"><i class="bi bi-chevron-left"></i></a>
                }

                @{
                    // We use this so we don't have too many page buttons at the bottom of the page
                    var startPage = Math.Max(1, Model.Page - 2);
                    int endPage = Math.Min(Model.Page + 2, amountOfPages);
                }

                @if (startPage > 1)
                {
                    <a asp-route-page="1">1</a>
                    // If there is pages between 1 and start page we want to show ...
                    @if (startPage > 2)
                    {
                        <span class="dots">...</span>
                    }

                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    if (i == Model.Page)
                    {
                        <a asp-route-page="@i" class="active">@i</a>
                    }
                    else
                    {
                        <a asp-route-page="@i">@i</a>
                    }
                }

                @if (endPage < amountOfPages)
                {
                    @if (endPage < amountOfPages - 1)
                    {
                        // Show dots if there is more than one page between endPage and last page
                        <span class="dots">...</span>
                    }

                    <a asp-route-page="@amountOfPages">@amountOfPages</a>
                }

                @if (Model.Page != amountOfPages)
                {
                    // We don't want go forward arrow to be visible if we are on the last page
                    <a asp-route-page="@(Model.Page + 1)"><i class="bi bi-chevron-right"></i></a>
                }
            </div>
        }
        else
        {
            <!--THis need styling!!!!-->
            <div>Not found</div>
        }
    </div>
</div>