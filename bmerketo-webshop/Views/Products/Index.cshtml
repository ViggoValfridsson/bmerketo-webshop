@model CollectionViewmodel

@{
    ViewData["title"] = "Products";
    var categories = await _categoryService.GetAllAsync();
    var tags = await _tagService.GetAllAsync();
    var amountOfPages = Math.Ceiling(Model.RowCount / 32);
}

<div>
    <div class="container">
        <div>
            <nav>
                <ul>
                @foreach (var category in categories)
                {
                    <li>
                            <a asp-action="ProductsByCategory" asp-route-category="@category.Name" asp-route-page="1">@category.Name</a>
                    </li>
                }
                    @foreach (var tag in tags)
                    {
                        <li>
                            <a asp-action="ProductsByTag" asp-route-tag="@tag.Name" asp-route-page="1">@tag.Name</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
        <div class="filter"></div>
        @if (Model.Products != null && Model.Products.Count > 0)
        {
            <Partial name="/Views/Partials/_ProductCollection.cshtml" />

            @if (amountOfPages > 0)
            {
                @for (int i = 1; i <= amountOfPages; i++)
                {
                    @if (Model.Page != 1)
                    {
                        <a asp-route-page="@(Model.Page - 1)"><i class="bi bi-chevron-left"></i></a>
                    }
                    <a asp-route-page="@i">@i</a>
                    @if (Model.Page != amountOfPages)
                    {
                        <a asp-route-page="@(Model.Page + 1)"><i class="bi bi-chevron-right"></i></a>
                    }

                }
            }


        }
        else
        {
            <!--THis need styling!!!!-->
            <div>Not found</div>
        }
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var form = document.getElementById("category-form");
            var categoryDropdown = document.getElementById("category-dropdown");

            categoryDropdown.addEventListener("change", function () {
                getUrl(categoryDropdown.value, "category")
            });

            function getUrl(selectedOption, type) {
                var baseUrl = "/products/";
                var actionUrl = baseUrl + type + "/" + selectedOption;
                form.action = actionUrl;
                form.submit();
            }
        });
    </script>
</div>